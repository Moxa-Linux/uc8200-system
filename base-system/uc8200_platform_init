#!/bin/bash
#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright (C) Moxa, Inc. All rights reserved.
# Copyright (C) 2019		Wes Huang	<Wes.Huang@moxa.com>

rfs_resize() {
	expand2fs
	mv /sbin/expand2fs /sbin/expand2fs.bak
	sync
	/sbin/reboot -d -f -i
}

init_gpio() {
	local gpio="${1}"
	local direction="${2}"
	local value="${3}"

	if [ ! -e "/sys/class/gpio/gpio${gpio}" ]; then
		echo "${gpio}" > "/sys/class/gpio/export"
		echo "${direction}" > "/sys/class/gpio/gpio${gpio}/direction"
	fi
	if [ "${direction}" == "out" ]; then
		echo "${value}" > "/sys/class/gpio/gpio${gpio}/value"
	fi
}

init_network_config() {
	local num_of_eth="${1}"
	echo "# interfaces(5) file used by ifup(8) and ifdown(8)"
	echo "# Include files from /etc/network/interfaces.d:"
	echo "source-directory /etc/network/interfaces.d"
	echo -n "auto"

	for (( i=0 ; i<"${num_of_eth}"; i++ ))
	do
		echo -n " eth${i}"
	done

	echo " lo"
	echo "iface lo inet loopback"

	for (( i=0 ; i<"${num_of_eth}"; i++ ))
	do
		echo "iface eth${i} inet static"
		echo "        address 192.168.$((${i} + 3)).127"
		echo "        network 192.168.$((${i} + 3)).0"
		echo "        netmask 255.255.255.0"
		echo "        broadcast 192.168.$((${i} + 3)).255"
	done
}

get_model_name() {
	local model_name

	# In case the CV model which name is UC-XX-XX (XX)
	model_name="$(mx-ver -m | awk '{print $1}')"

	case ${model_name} in
		UC-8210-T-LX|UC-8210-T-LX-S)
			model_name="UC-8210-LX"
		;;
		UC-8220-T-LX|UC-8220-T-LX-US-S|UC-8220-T-LX-EU-S|UC-8220-T-LX-AP-S)
			model_name="UC-8220-LX"
		;;
	esac

	echo ${model_name}
}

one_time_setting() {
	# let the Wi-Fi interface keep to use the wlanx name
	ln -sf /dev/null /etc/systemd/network/99-default.link

	# fix the issue that mount storage fuse-related filesystem via udev might be failed
	cp -a /lib/systemd/system/systemd-udevd.service /etc/systemd/system/
	sed -i 's/MountFlags=slave/MountFlags=shared/' /etc/systemd/system/systemd-udevd.service

	depmod -a

	# enable bootloader to pass the fsck.repair parameter to kernel
	fw_setenv robust 1

	# User may use resize-img to recreate an image for deployment,
	# hence we leave the network setting unchanged if existing.
	if [ ! -f "/etc/network/interfaces" ]; then
		init_network_config 2 > /etc/network/interfaces
	fi
}

initial_wifi() {
	systemctl start moxa-wifi-signald.service
}

initial_cellular() {
	mx-module-ctl -i 1
	mx-module-ctl -p on
	systemctl start moxa-cellular-signald.service
	systemctl start moxa-cellular-utils.service
}

initial_dio() {
	# DI/DO
	init_gpio "480" "out" "0"
	init_gpio "481" "out" "0"
	init_gpio "482" "out" "0"
	init_gpio "483" "out" "0"
	init_gpio "488" "in"
	init_gpio "489" "in"
	init_gpio "490" "in"
	init_gpio "491" "in"
}

uc8200_initial() {
	local model_name

	model_name=$(get_model_name)

	ln -sf /etc/moxa-configs/${model_name}/configs/* /etc/moxa-configs/
	ln -sf /etc/moxa-configs/${model_name}/udev/* /etc/udev/rules.d/

	# only needs to initial one time
	if [ -f /sbin/expand2fs ]; then
		one_time_setting
		rfs_resize
	fi

	# initial by model
	case "${model_name}" in
		UC-8210-LX)
			mx-module-ctl -p off
			;;
		UC-8220-LX)
			initial_wifi
			initial_cellular
			;;
		*)
			echo "unknown model name."
			;;
	esac

	# general initial
	initial_dio
}

umount_rfs() {
	umount -f -l /tmp
	umount -f -l /media
	umount -f -l /home
	umount -f -l /usr
	umount -f -l /lib
	umount -f -l /bin
	umount -f -l /sbin
	umount -f -l /etc
	umount -f -l /var
	umount -f -l /root
	umount -f -l /overlayfs
}

stop_wireless() {
	cell_mgmt stop
	wifi_mgmt stop
	if lsmod | grep "^wlan" -q; then
		rmmod wlan
	fi
	# Cellular power off
	mx-module-ctl -p off
}

uc8200_stop() {
	local model_name

	model_name=$(get_model_name)

	case ${model_name} in
		UC-8210-LX)
			echo "Do nothing"
			;;
		UC-8220-LX)
			stop_wireless
			;;
		*)
			echo "unknown model name."
			;;
	esac

	# general stop
	umount_rfs
}

main() {
	case "${1}" in
	start)
		uc8200_initial
        ;;
	restart|reload|force-reload)
		echo "Error: argument '${1}' not supported" >&2
		exit 3
		;;
	stop)
		uc8200_stop
		;;
	*)
		echo "Usage: ${0} start|stop" >&2
		exit 3
		;;
	esac
}

main "${@}"

exit 0
